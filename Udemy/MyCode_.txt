"use strict"; // Helps detects bugs.

// Should use cammel case when naming variables
// e.g  firstNamePerson

// const now = 2037;

// const ageJames = now - 1996;
// const ageWife = now - 2005;

// console.log(ageJames, ageWife);

// let markMass = 78;
// let markHeight = 1.69;

// let johnMass = 92;
// let johhnHeight = 1.95;

// let markHigherBMI = false;

// function bmi(m, h) {
//     return m / h ** 2;
// }

// if (bmi(markMass, markHeight) > bmi(johnMass, johhnHeight)) {
//     console.log(`mark's BMI (${bmi(markMass, markHeight)}) is higher than John's (${bmi(johnMass, johhnHeight)})`)

// } else {
//     console.log(`John's BMI is higher than Marks's`)
// }

// Type conversion  is when we convert types manually. Type coercion is when JavaScripts converts types on its own

// let year = "2021"
// let intYear_ = Number(year);

// console.log(intYear_ + 2)

// Always use === not == double performs type coercion

// const inputData = Number(prompt("What's your favourite number? "));

// if (inputData != "25") console.log("Type coercion");
// if (inputData !== 25) console.log("Correct format");

// and && - or ||

// Conding challenge three

// function averageScore(firstScore, secondScore, thirdScore) {
//     return (firstScore + secondScore + thirdScore) / 3;
// }

// let firstDolphinScore = 97;
// let secondDolphinScore = 112;
// let thirdDolphinScore = 101;

// let firstKoalasScore = 109;
// let secondKoalasScore = 95;
// let thirdKoalasScore = 106;

// let dolphingAverageScore = 0;
// let koalasAverageScore = 0;

// dolphingAverageScore = averageScore(firstDolphinScore, secondDolphinScore, thirdDolphinScore);

// koalasAverageScore = averageScore(firstKoalasScore, secondKoalasScore, thirdKoalasScore);

// if (dolphingAverageScore > koalasAverageScore && dolphingAverageScore >= 100)
//     console.log("Dolphoin Wins");
// else if (koalasAverageScore > dolphingAverageScore && koalasAverageScore >= 100)
//     console.log("Koalas Wins");
// else if (dolphingAverageScore === koalasAverageScore && dolphingAverageScore >= 100 && koalasAverageScore >= 100)
//     console.log("Draw");
// else
//     console.log("No one Wins")

// Switch statements

// const day = prompt("Enter the day? ")

// switch (day) {
//     case 'Monday':
//         console.log("I go to gym");
//         break;
//     case 'Tuesday':
//         console.log("Prepare for a driving linsence");
//         break;

//     default:
//         console.log("Invalid");
// }

// The conditional operator. This allows if-else statements to be written in one line.  This is also called the tenary operator

// let age = 0;

// age >= 18 ? console.log("True") : console.log("False");

// const bill = Number(prompt("Enter any number: "));

// let tip = 0;

// (bill >= 50 && bill <= 300) ? tip = 15 / 100: tip = 20 / 100;

// console.log(`The bill was ${bill}, the tip was ${bill*tip}, and the total value ${bill + bill*tip}`);

"use strict"; // Helps detects bugs.

// functions

// function first(name) {

//     const result = `my name is ${name}`;
//     return result;
// }

// const secondFunction = function(name_) {
//     return `name is ${name_}`;
// }

// console.log(secondFunction("James"))

// Arrow function

// const arrowFunction = _name => `Arrow function ${_name}`;

// console.log(arrowFunction("James"))

// // arrow functions with complex body

// const arrow_Function = year => {
//     let myCurrentAge = 2021 - year;
//     let afterSomeYears = myCurrentAge + 50;

//     return afterSomeYears
// }

// console.log(arrow_Function(1996))

// Coding challenge

// const average = (num1, num2, num3) => (num1 + num2 + num3) / 3;
// const checkWinner = (averageDolphin, averageKoalas) => {
//     if (averageDolphin > averageKoalas * 2)
//         console.log(`Dolphin win (${averageDolphin}, ${averageKoalas})`)
//     else if (averageKoalas > averageDolphin * 2)
//         console.log(`koalas win (${averageKoalas}, ${averageDolphin})`)
//     else
//         console.log("No one wins")
// }

// let averageDolphin = average(1, 3, 41);
// let averageKoalas = average(23, 34, 27);

// checkWinner(averageDolphin, averageKoalas)

// All about Arrays

//const friends = ['Gift', 'James', 'Athi', 'Ndoro'];

// adding elements

// friends.push('Sanele'); // Add element at the end of the array -  this returns the size of the new array
// friends.unshift('Tumelo') // Add the element at the begining of the array

// console.log(friends);

// // removing elements from the array

// friends.pop() // Removes the last element - returns the popped element
// friends.shift() // removes the first element -  returns the first popped element

// console.log(friends);
// // method that search for item in array and returns True or False

// console.log(friends.includes("James"))
// console.log(friends.includes("Rondebult"))

// Coding Challenge

// const calculateTip = (bill) => {
//     bill >= 50 && bill <= 300 ? (bill *= 15 / 100) : (bill *= 20 / 100);
//     return bill;
// };

// const bills = [125, 555, 44];
// const tips = []
// const totalBills = []

// tips.unshift(calculateTip(bills[0]));
// tips.push(calculateTip(bills[1]));
// tips.push(calculateTip(bills[2]));
// console.log(tips)

// totalBills.unshift(bills[0] + tips[0])
// totalBills.push(bills[1] + tips[1])
// totalBills.push(bills[2] + tips[2])
// console.log(totalBills)

// object - groups together different variables that belong together

// const jonas = {
//     firstName: "James",
//     lastName: "Kalenga",
//     age: 25,
//     location: "Rondebult"
// }

// // getting data from objects
// console.log(jonas.lastName);
// console.log(jonas['lastName']) // takes in the expression

// // add new properties

// jonas.school = "Wits";
// jonas.dreamJob = 'Software Engineer';

// console.log(jonas)

// const jonas = {
//     firstName: "Jonas",
//     lastName: "Kalenga",
//     friends: ["Michael", "Jonass", "Aviwe"],
//     birthyear: 1991,
//     job: "teacher",
//     driveLicense: true,
//     calAge: function() {

//         this.age = 2037 - this.birthyear;

//         return this.age // this points to the object. better than using jonas.age. Use this when you are working inside an object
//     }
// }

// // console.log(`${jonas.firstName} has ${jonas.friends.length} friends, and his best friend is called ${jonas.friends[0]}`)

// console.log(`${jonas.firstName} is a ${jonas.calAge()} old ${jonas.job}, and he has ${ jonas.driveLicense ? 'a' : 'no'} diriver's license`)

// Coding challenge 3

// const markObject = {
//     massMark: 78,
//     heightMark: 1.69,
//     markBMI: function() {
//         return this.massMark / (this.heightMark ** 2)
//     }
// };

// const johnObject = {
//     massJohn: 92,
//     heightJohn: 1.95,
//     johnBMI: function() {
//         return this.massJohn / (this.heightJohn ** 2)

//     }

// };

// const printFunction = (mark, john) => {
//     if (mark.markBMI > john.markBMI)
//         console.log(`John's BMI (${john.johnBMI()}) is higher than Mark's (${mark.markBMI()})`);
//     else
//         console.log(`Mark's BMI (${mark.markBMI()}) is higher than John's BMI (${john.johnBMI()})`)
// }

// printFunction(markObject, johnObject)

// Loops

// for (let rep = 1; rep <= 10; rep++)
//     console.log(`Lifting weights repetition ${rep}`)

// const jonasArray = [
//     'Jonas',
//     'Schmed-what-wat',
//     2037 - 1991,
//     'teacher', ['Micheal', 'Peter', 'Steven']
// ]

// for (let index = 0; index < jonasArray.length; index++)
//     console.log(jonasArray[index])
//     // when adding values in arrays using for-loops use .push()
//     // continue and break. ---KNOW THE DIFFERENCE
//     // while-loop

// let rep = 1

// while (rep <= 10) {
//     console.log(`Output ${rep}`);
//     rep++
// }

// const bills = [22, 295, 176, 440, 37, 105, 10, 1100, 86, 52];
// const tip = [];
// const totals = [];

// for (let index = 0; index < bills.length; index++) {

//     tip.push(calculateTip(bills[index]));
//     totals.push(bills[index] + tip[index]);
// }

// console.log(bills)
// console.log(tip)
// console.log(totals)

// const calcAverage = arr => {
//     let sum = 0;
//     for (let index = 0; index < arr.length; index++) {
//         sum += arr[index];
//     }

//     return sum / arr.length;

// }

// console.log(calcAverage(totals))

// ----------------- PART 3 ----------------------
// Destructuring arrays

const arr = [1,2,3];
const [x,y,z] = arr;